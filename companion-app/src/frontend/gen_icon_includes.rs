////////////////////////////////////////////////////////////
/////// Auto-generated by build.rs â€” DO NOT EDIT  //////////
////////////////////////////////////////////////////////////

use std::collections::HashMap;
use egui::{ImageSource, include_image};

pub fn get_icon_map() -> HashMap<String, ImageSource<'static>> {
    let mut m = HashMap::new();

    m.insert(
        "feature_breedingcalculator".to_owned(),
        include_image!("../../assets/icons/feature_breedingcalculator.png"),
    );
    m.insert(
        "feature_notes".to_owned(),
        include_image!("../../assets/icons/feature_notes.png"),
    );
    m.insert(
        "feature_resources".to_owned(),
        include_image!("../../assets/icons/feature_resources.png"),
    );
    m.insert(
        "feature_settings".to_owned(),
        include_image!("../../assets/icons/feature_settings.png"),
    );
    m.insert(
        "feature_typematrix".to_owned(),
        include_image!("../../assets/icons/feature_typematrix.png"),
    );
    m.insert(
        "generic_back".to_owned(),
        include_image!("../../assets/icons/generic_back.png"),
    );
    m.insert(
        "generic_home".to_owned(),
        include_image!("../../assets/icons/generic_home.png"),
    );
    m.insert(
        "missing_icon".to_owned(),
        include_image!("../../assets/icons/missing_icon.png"),
    );
    m.insert(
        "shutdown_button".to_owned(),
        include_image!("../../assets/icons/shutdown_button.png"),
    );
    m.insert(
        "type_bug".to_owned(),
        include_image!("../../assets/icons/type_bug.png"),
    );
    m.insert(
        "type_dark".to_owned(),
        include_image!("../../assets/icons/type_dark.png"),
    );
    m.insert(
        "type_dragon".to_owned(),
        include_image!("../../assets/icons/type_dragon.png"),
    );
    m.insert(
        "type_electric".to_owned(),
        include_image!("../../assets/icons/type_electric.png"),
    );
    m.insert(
        "type_fairy".to_owned(),
        include_image!("../../assets/icons/type_fairy.png"),
    );
    m.insert(
        "type_fighting".to_owned(),
        include_image!("../../assets/icons/type_fighting.png"),
    );
    m.insert(
        "type_fire".to_owned(),
        include_image!("../../assets/icons/type_fire.png"),
    );
    m.insert(
        "type_flying".to_owned(),
        include_image!("../../assets/icons/type_flying.png"),
    );
    m.insert(
        "type_ghost".to_owned(),
        include_image!("../../assets/icons/type_ghost.png"),
    );
    m.insert(
        "type_grass".to_owned(),
        include_image!("../../assets/icons/type_grass.png"),
    );
    m.insert(
        "type_ground".to_owned(),
        include_image!("../../assets/icons/type_ground.png"),
    );
    m.insert(
        "type_ice".to_owned(),
        include_image!("../../assets/icons/type_ice.png"),
    );
    m.insert(
        "type_normal".to_owned(),
        include_image!("../../assets/icons/type_normal.png"),
    );
    m.insert(
        "type_poison".to_owned(),
        include_image!("../../assets/icons/type_poison.png"),
    );
    m.insert(
        "type_psychic".to_owned(),
        include_image!("../../assets/icons/type_psychic.png"),
    );
    m.insert(
        "type_rock".to_owned(),
        include_image!("../../assets/icons/type_rock.png"),
    );
    m.insert(
        "type_steel".to_owned(),
        include_image!("../../assets/icons/type_steel.png"),
    );
    m.insert(
        "type_water".to_owned(),
        include_image!("../../assets/icons/type_water.png"),
    );
    m.insert(
        "typematrix_atk_def_icon".to_owned(),
        include_image!("../../assets/icons/typematrix_atk_def_icon.png"),
    );
    m
}
